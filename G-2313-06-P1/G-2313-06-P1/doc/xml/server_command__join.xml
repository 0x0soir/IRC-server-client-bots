<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="server_command_join" kind="page">
    <compoundname>server_command_join</compoundname>
    <title>server_command_join</title>
    <detaileddescription>
<para>Función handler del comando JOIN del IRC.</para><sect1 id="server_command_join_1synopsis_join">
<title>Synopsis</title>
<para><computeroutput> <bold>#include</bold> <bold>&lt;<ref refid="G-2313-06-P1__function__handlers_8h" kindref="compound">G-2313-06-P1_function_handlers.h</ref>&gt;</bold> <linebreak/>
 <bold>void <ref refid="G-2313-06-P1__function__handlers_8c_1ab5db16f31285cff48c9239dceb17eb86" kindref="member">server_command_join(char* command, int desc, char * nick_static, int* register_status)</ref></bold> </computeroutput> </para></sect1>
<sect1 id="server_command_join_1descripcion_join">
<title>Descripción</title>
<para>Esta función ejecuta el handler del comando en cuestión, para ello realiza una serie de comprobaciones previas:</para><para><itemizedlist>
<listitem>
<para><bold>Parse:</bold> Comprueba que el parseo del comando JOIN sea correcto, en caso contrario devuelve un mensaje de error generado por la función del TAD <bold>IRCMsg_ErrNeedMoreParams</bold> que se envía mediante el descriptor del socket del cliente recibido por el parámetro <bold>int desc</bold>. </para></listitem>
</itemizedlist>
</para><para>Una vez realizadas las comprobaciones, dicha función se ejecuta con el siguiente flujo:</para><para><itemizedlist>
<listitem>
<para><bold>Comprueba el modo del canal:</bold> Es decir, comprueba que el canal no esté protegido por una clave de acceso mediante la función <bold>IRCTADChan_GetModeInt</bold>. En caso de que si tenga clave, se comprueba que se haya introducido una clave correcta, en caso de ser incorrecta se devuelve un mensaje generado con la función del TAD <bold>IRCMsg_ErrBadChannelKey</bold>.  </para></listitem>
<listitem>
<para><bold>Realiza el JOIN en el canal:</bold> Es decir, asigna el canal al usuario de forma correcta, se devuelve al usuario un mensaje de bienvenida mediante la función del TAD <bold>IRCMsg_RplWelcome</bold> mediante el descriptor del socket y la función <bold>send()</bold>. </para></listitem>
<listitem>
<para><bold>Devuelve mensaje:</bold> Es decir, en caso de que se haya registrado de forma correcta, se devuelve al usuario un mensaje de bienvenida mediante la función del TAD <bold>IRCMsg_Join</bold> mediante el descriptor del socket y la función <bold>send()</bold>. <linebreak/>
Condición necesaria: En caso de tener clave, debe ser correcta.  </para></listitem>
</itemizedlist>
</para><para>Al finalizar el flujo de la función se liberan los recursos utilizados.</para></sect1>
<sect1 id="server_command_join_1return_join">
<title>Valores devueltos</title>
<para><itemizedlist>
<listitem>
<para><bold>void</bold> No devuelve nada. </para></listitem>
</itemizedlist>
</para></sect1>
<sect1 id="server_command_join_1authors_join">
<title>Autores</title>
<para><itemizedlist>
<listitem>
<para>Jorge Parrilla Llamas (<ulink url="mailto:jorge.parrilla@estudiante.uam.es">jorge.parrilla@estudiante.uam.es</ulink>) </para></listitem>
<listitem>
<para>Javier de Marco Tomás (<ulink url="mailto:javier.marco@estudiante.uam.es">javier.marco@estudiante.uam.es</ulink>) </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
