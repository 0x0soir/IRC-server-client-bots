<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="server_command_list" kind="page">
    <compoundname>server_command_list</compoundname>
    <title>server_command_list</title>
    <detaileddescription>
<para>Función handler del comando LIST del IRC.</para><sect1 id="server_command_list_1synopsis_list">
<title>Synopsis</title>
<para><computeroutput> <bold>#include</bold> <bold>&lt;<ref refid="G-2313-06-P1__function__handlers_8h" kindref="compound">G-2313-06-P1_function_handlers.h</ref>&gt;</bold> <linebreak/>
 <bold>void <ref refid="G-2313-06-P1__function__handlers_8c_1af289e3cc397e24e9b8c12c35bce68285" kindref="member">server_command_list(char* command, int desc, char * nick_static, int* register_status)</ref></bold> </computeroutput> </para></sect1>
<sect1 id="server_command_list_1descripcion_list">
<title>Descripción</title>
<para>Esta función ejecuta el handler del comando en cuestión, para ello realiza una serie de comprobaciones previas:</para><para><itemizedlist>
<listitem>
<para><bold>Parse:</bold> Comprueba que el parseo del comando LIST sea correcto. </para></listitem>
</itemizedlist>
</para><para>Una vez realizadas las comprobaciones, dicha función se ejecuta con el siguiente flujo:</para><para><itemizedlist>
<listitem>
<para><bold>Recupera la lista de canales:</bold> Es decir, solicita un array de canales al TAD utilizando la función <bold>IRCTADChan_GetList</bold> a la que se le pasan los parámetros <bold>char *** channels</bold> y <bold>int *size</bold> para tener los datos.  </para></listitem>
<listitem>
<para><bold>Devuelve mensaje de inicio:</bold> Es decir, se devuelve al usuario un mensaje generado por la función del TAD <bold>IRCMsg_RplListStart</bold> utilizando el descriptor del socket del cliente y la función <bold>send()</bold>. </para></listitem>
<listitem>
<para><bold>Genera la lista de canales:</bold> Es decir, se devuelve al usuario la lista de canales utilizando el descriptor del socket del cliente y la función <bold>send()</bold>. Para ello, se realizan el siguiente flujo sobre la lista adquirida de canales: <itemizedlist>
<listitem>
<para><bold>Comprobación del modo del canal:</bold> Antes de enviar el canal se comprueba el modo, únicamente se enviará la lista de canales que sean públicos, nunca los secretos. </para></listitem>
<listitem>
<para><bold>Nombre del canal:</bold> Se devuelve el nombre del canal. </para></listitem>
<listitem>
<para><bold>Número de usuarios:</bold> Junto al nombre del canal se devuelve el número de usuarios que están en ese momento en el canal. </para></listitem>
<listitem>
<para><bold>Topic del canal:</bold> Junto al nombre del canal y el número de usuarios, se devuelve también el topic del canal actual. </para></listitem>
</itemizedlist>
</para></listitem>
<listitem>
<para><bold>Devuelve mensaje de fin:</bold> Es decir, se devuelve al usuario un mensaje generado por la función del TAD <bold>IRCMsg_RplListEnd</bold> indicándole que se ha finalizado con la comunicación de la lista de canales. </para></listitem>
</itemizedlist>
</para><para>Al finalizar el flujo de la función se liberan los recursos utilizados.</para></sect1>
<sect1 id="server_command_list_1return_list">
<title>Valores devueltos</title>
<para><itemizedlist>
<listitem>
<para><bold>void</bold> No devuelve nada. </para></listitem>
</itemizedlist>
</para></sect1>
<sect1 id="server_command_list_1authors_list">
<title>Autores</title>
<para><itemizedlist>
<listitem>
<para>Jorge Parrilla Llamas (<ulink url="mailto:jorge.parrilla@estudiante.uam.es">jorge.parrilla@estudiante.uam.es</ulink>) </para></listitem>
<listitem>
<para>Javier de Marco Tomás (<ulink url="mailto:javier.marco@estudiante.uam.es">javier.marco@estudiante.uam.es</ulink>) </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
